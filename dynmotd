#!/bin/bash
###############################################################################
# Author: Matthias Thubauville
#
# General dynamic motd.
# Tested with:
# - Ubuntu 14.04
# - Ubuntu 16.04
# - CentOS 7
#
# This file is meant to be put in your $PATH and run from the .profile.
# This means the output is printed with every new login shell, i.e. a TTY or
# ssh login.
###############################################################################

export COLOR_NC='\033[0m' # No Color
export COLOR_BLACK='\033[0;30m'
export COLOR_GRAY='\033[1;30m'
export COLOR_RED='\033[0;31m'
export COLOR_LIGHT_RED='\033[1;31m'
export COLOR_GREEN='\033[0;32m'
export COLOR_LIGHT_GREEN='\033[1;32m'
export COLOR_BROWN='\033[0;33m'
export COLOR_YELLOW='\033[1;33m'
export COLOR_BLUE='\033[0;34m'
export COLOR_LIGHT_BLUE='\033[1;34m'
export COLOR_PURPLE='\033[0;35m'
export COLOR_LIGHT_PURPLE='\033[1;35m'
export COLOR_CYAN='\033[0;36m'
export COLOR_LIGHT_CYAN='\033[1;36m'
export COLOR_LIGHT_GRAY='\033[0;37m'
export COLOR_WHITE='\033[1;37m'

# see https://stackoverflow.com/a/246128
function get_current_dir
{

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

echo $DIR

}

find $(get_current_dir)/config.d -type f -or -type l | sort | while read i; do $i; done
